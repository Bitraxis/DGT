/* Colorscheme stylesheet */
@import url("colorscheme.css");

/* Arrange children like planets around a center globe and make them blobby */
.interface {
	position: relative; /* parent for absolutely positioned "planets" */
	width: 100%;
	/* fill viewport so absolute positions are easy to reason about */
	height: 100vh;
	display: grid;
	/* 3x3 grid so we can place items in corners and center */
	grid-template-columns: 1fr auto 1fr;
	grid-template-rows: 1fr auto 1fr;
	align-items: center;
	justify-items: center;
	padding: 2rem 1rem;
	box-sizing: border-box;
	overflow: visible; /* allow planets to sit around the center without clipping */
}

/* Base blob (planet) styling for direct children */
.interface > div,
#maininterface > div {
	/* grid-placed blobs; not absolutely positioned */
	background-color: var(--color-primary);
	color: var(--color-surface);
	display: grid; /* center content without flex */
	place-items: center;
	box-shadow: 0 10px 30px rgba(59, 214, 198, 0.12), var(--shadow);
	/* allow small off-grid nudges using CSS vars --tx / --ty */
	--tx: 0px;
	--ty: 0px;
	transform: translate(var(--tx), var(--ty));
	transition: transform var(--transition), box-shadow var(--transition), filter var(--transition);
	position: relative; /* needed for connector pseudo-element positioning */
	/* morph animation settings (can be overridden per-item) */
	--morph-dur: 8s;
	--morph-delay: 0s;
	animation: blobMorph var(--morph-dur) ease-in-out infinite alternate var(--morph-delay);
	cursor: default;
}

/* connectors: thin lines that point from each blob toward the center IDEON blob */
.interface > div::before,
#maininterface > div::before {
    content: "";
    position: absolute;
    left: 50%;
    top: 50%;
    width: var(--connector-length, 30vmin);
    height: 2px;
    background: linear-gradient(90deg, rgba(67,54,51,0.12), rgba(67,54,51,0.06));
    transform-origin: center right;
    /* angle should be set per-item via --angle; translateX moves the line so it extends toward center */
    --angle: 45deg;
    --connector-length: 30vmin;
    transform: rotate(var(--angle)) translateX(calc(var(--connector-length) * -1));
    z-index: 10; /* sit under blobs */
    border-radius: 2px;
    transition: opacity 0.25s ease, transform var(--transition);
    pointer-events: none;
}

/* ensure any CSS-based connectors are hidden (we rely on no connectors) */
.interface > div::before,
#maininterface > div::before {
	display: none !important;
}

/* Make headings sit nicely inside the blobs */
.interface > div h1,
#maininterface > div h1 {
	margin: 0;
	font-size: 1rem;
	font-weight: 600;
	text-align: center;
	color: inherit;
	padding: 0.25rem 0.5rem;
}

/* Create distinct "planet" sizes, shapes and orbital positions using nth-child */

.interface > div:nth-child(1) {
	/* central IDEON blob centered in the grid */
	width: 170px;
	height: 170px;
	/* more irregular/blobby shape */
	border-radius: 38% 62% 52% 48% / 60% 40% 62% 38%;
	grid-column: 2 / 3;
	grid-row: 2 / 3;
	z-index: 40;
	/* IDEON morph slower and more pronounced */
	--morph-dur: 10s;
	--morph-delay: 0s;
	/* IDEON connector short and hidden (no self-connector) */
	--connector-length: 0px;
}

.interface > div:nth-child(2) {
	/* top-left planet */
	width: 110px;
	height: 110px;
	border-radius: 60% 40% 55% 45% / 50% 60% 40% 50%;
	grid-column: 1 / 2;
	grid-row: 1 / 2;
	z-index: 30;
	border: 2px solid rgba(0,0,0,0.04);
	background-color: color-mix(in srgb, var(--color-primary) 88%, white);
	/* nudge slightly off the grid */
	--tx: -10px;
	--ty: 6px;
	--angle: 45deg;
	--connector-length: 28vmin;
	--morph-dur: 7.5s;
	--morph-delay: 0.2s;
}

.interface > div:nth-child(3) {
	/* top-right planet */
	width: 95px;
	height: 95px;
	border-radius: 45% 55% 40% 60% / 60% 45% 55% 40%;
	grid-column: 3 / 4;
	grid-row: 1 / 2;
	z-index: 28;
	border: 2px solid rgba(0,0,0,0.04);
	background-color: color-mix(in srgb, var(--color-primary) 76%, var(--color-secondary));
	--tx: 8px;
	--ty: -8px;
	--angle: 135deg;
	--connector-length: 28vmin;
	--morph-dur: 7s;
	--morph-delay: 0.4s;
}

.interface > div:nth-child(4) {
	/* bottom-left planet */
	width: 125px;
	height: 125px;
	border-radius: 55% 45% 60% 40% / 45% 55% 40% 60%;
	grid-column: 1 / 2;
	grid-row: 3 / 4;
	z-index: 26;
	border: 2px solid rgba(0,0,0,0.04);
	background-color: color-mix(in srgb, var(--color-primary) 72%, var(--color-accent));
	--tx: -6px;
	--ty: 12px;
	--angle: -45deg;
	--connector-length: 30vmin;
	--morph-dur: 8.5s;
	--morph-delay: 0.1s;
}

.interface > div:nth-child(5) {
	/* bottom-right planet */
	width: 85px;
	height: 85px;
	border-radius: 50% 40% 60% 50% / 60% 50% 40% 50%;
	grid-column: 3 / 4;
	grid-row: 3 / 4;
	z-index: 24;
	border: 2px solid rgba(0,0,0,0.04);
	background-color: color-mix(in srgb, var(--color-primary) 64%, var(--color-dark));
	--tx: 10px;
	--ty: 8px;
	--angle: -135deg;
	--connector-length: 30vmin;
	--morph-dur: 6.5s;
	--morph-delay: 0.3s;
}

/* Make clickable blobs show pointer and an edit control */
.interface > div.clickable {
	cursor: pointer;
}

.interface > div .edit-btn {
	position: absolute;
	top: 6px;
	right: 6px;
	width: 20px;
	height: 20px;
	border-radius: 50%;
	background: rgba(0,0,0,0.12);
	color: var(--color-surface);
	display: inline-flex;
	align-items: center;
	justify-content: center;
	font-size: 12px;
	line-height: 1;
	opacity: 0;
	transition: opacity 0.18s ease;
	pointer-events: auto;
}
.interface > div:hover .edit-btn,
.interface > div .edit-btn.active {
	opacity: 1;
}

/* hide edit button specifically for the Settings blob */
.interface > div#interface__settings .edit-btn { display: none !important; }

/* save confirmation small bubble */
.interface > div .save-confirmation {
	position: absolute;
	left: 50%;
	transform: translateX(-50%);
	bottom: 8px;
	background: rgba(0,0,0,0.12);
	color: var(--color-surface);
	padding: 4px 8px;
	border-radius: 8px;
	font-size: 12px;
	opacity: 0;
	pointer-events: none;
	transition: opacity 180ms ease, transform 180ms ease;
}
.interface > div .save-confirmation.show {
	opacity: 1;
	transform: translateX(-50%) translateY(-4px);
}

/* Settings modal overlay and dialog */
.seed-modal-overlay {
	position: fixed;
	left: 0; right: 0; top: 0; bottom: 0;
	background: rgba(0,0,0,0.18);
	display: flex;
	align-items: flex-start; /* place near top */
	justify-content: center;
	padding-top: 6vh; /* small gap from top */
	z-index: 9999;
}
.seed-modal {
	/* Use theme variables when available, but provide explicit fallbacks to ensure contrast
	   so modal text remains readable regardless of underlying page or theme. */
	background: var(--color-surface, #ffffff);
	color: var(--color-text, #111111);
	padding: 1rem 1.2rem;
	border-radius: 12px;
	min-width: 280px;
	box-shadow: 0 12px 40px rgba(0,0,0,0.12);
}
.seed-modal-title {
	font-weight: 700;
	margin-bottom: 0.6rem;
}
.seed-modal-row { display:flex; align-items:center; gap:8px; margin-bottom:0.8rem; }
.seed-modal-row label { min-width:48px; font-weight:600; }
.seed-input { 
	flex:1; padding:6px 8px; border-radius:6px; 
	border:1px solid var(--color-border, #d0d0d0);
	background: var(--seed-input-bg, #ffffff);
	color: var(--seed-input-color, #111111);
}
.seed-modal-actions { display:flex; gap:8px; justify-content:flex-end; }
.seed-modal-actions .seed-save { 
	background: var(--color-primary, #00bfa5); 
	color: var(--color-surface, #ffffff); 
	border:none; padding:6px 10px; border-radius:6px; 
}
.seed-modal-actions .seed-cancel { 
	background: var(--seed-cancel-bg, transparent); 
	color: var(--seed-cancel-color, #111111);
	border:1px solid var(--color-border, #d0d0d0); padding:6px 10px; border-radius:6px; 
}

/* visually emphasize Settings blob so it reads as a control */
.interface > div#interface__settings,
#interface__settings {
	background: transparent; /* show only the SVG gear */
	color: var(--color-dark); 
	animation: none; 
	border-radius: 50%; /* circular container */
	display: grid;
	place-items: center;
	box-shadow: none;
	border: none;
	width: 64px;
	height: 64px;
	position: fixed;
	left: 16px;
	top: 16px;
	z-index: 9998;
	cursor: pointer;
}

/* remove previous gradient pseudo-element - replaced by inline SVG for crisp gear */
.interface > div#interface__settings::before { display: none !important; }

/* style the injected SVG gear to match theme */
.interface > div#interface__settings svg,
#interface__settings svg { color: color-mix(in srgb, var(--color-dark) 72%, var(--color-secondary)); display:block; width:80%; height:80%; }

/* visually-hidden helper for accessible headings */
.sr-only {
	position: absolute !important;
	width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0,0,0,0); white-space: nowrap; border: 0;
}

/* Make the whiteboard blob larger visually */
.interface > div#interface__whiteboard,
.interface > div:nth-child(5) {
	width: 150px !important;
	height: 150px !important;
	min-width: 150px;
	min-height: 150px;
}

/* When content is editable show subtle outline */
.interface > div[contenteditable="true"],
.interface > div[contenteditable] {
	outline: 2px dashed rgba(0,0,0,0.06);
}

/* Keyframes to slowly morph blob border-radius values */
@keyframes blobMorph {
	0% {
		border-radius: 38% 62% 52% 48% / 60% 40% 62% 38%;
	}
	25% {
		border-radius: 52% 48% 40% 60% / 45% 55% 35% 65%;
	}
	50% {
		border-radius: 60% 40% 55% 45% / 55% 45% 60% 40%;
	}
	75% {
		border-radius: 45% 55% 60% 40% / 60% 40% 45% 55%;
	}
	100% {
		border-radius: 38% 62% 52% 48% / 60% 40% 62% 38%;
	}
}

/* Make blobs feel more organic on hover */
.interface > div:hover,
#maininterface > div:hover {
	/* keep the per-item translate when scaling on hover */
	transform: translate(var(--tx), var(--ty)) scale(1.06);
	box-shadow: 0 18px 40px rgba(59, 214, 198, 0.18), 0 6px 18px rgba(67, 54, 51, 0.08);
	filter: saturate(1.05);
	z-index: 50;
}

/* Slight responsive fallback: stack into rows on narrow screens */
@media (max-width: 640px) {
	.interface { min-height: 700px; grid-template-columns: 1fr; grid-template-rows: auto; }
	.interface > div,
	#maininterface > div {
		grid-column: auto;
		grid-row: auto;
		display: block;
		margin: 0.8rem auto;
		transform: none;
	}
}


